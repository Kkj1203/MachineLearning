# -*- coding: utf-8 -*-
"""MLLabAss8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eqIs3a9Q5D4SmACBC_siPtNzYRlGC63p
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler

iris = load_iris()
X = iris.data
y = iris.target

scaler = StandardScaler()
X = scaler.fit_transform(X)

k = 3
n_samples, n_features = X.shape

np.random.seed(42)
centroids = X[np.random.choice(n_samples, k, replace=False)]

def compute_distance(a, b):
    return np.linalg.norm(a - b, axis=1)

for iteration in range(100):
    clusters = []
    for i in range(n_samples):
        distances = compute_distance(X[i], centroids)
        cluster = np.argmin(distances)
        clusters.append(cluster)
    clusters = np.array(clusters)
    new_centroids = np.array([X[clusters == j].mean(axis=0) for j in range(k)])
    if np.all(centroids == new_centroids):
      break
      centroids = new_centroids

print(f"\nConverged in {iteration+1} iterations.\n")
for idx, center in enumerate(centroids):
    print(f"Centroid {idx + 1}: {center}")

plt.figure(figsize=(8, 6))
for i in range(k):
    plt.scatter(X[clusters == i, 0], X[clusters == i, 1], label=f'Cluster {i+1}')
plt.scatter(centroids[:, 0], centroids[:, 1], c='black', marker='X', s=200, label='Centroids')
plt.title("K-Means Clustering on Iris Data (First 2 Features)")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.legend()
plt.grid(True)
plt.show()