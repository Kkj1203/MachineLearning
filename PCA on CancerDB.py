# -*- coding: utf-8 -*-
"""ML_LabAss5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bLJWaz2fuenwukjn89-_8bfoNBe5L1_P
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_breast_cancer
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA

data = load_breast_cancer()
X = data.data
y = data.target
target_names = data.target_names

print("X shape:", X.shape)
print("y shape:", y.shape)
print("Unique y values:", np.unique(y))
print("target_names:", target_names)

# scale + PCA
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Check for NaNs / Infs in scaled data
print("any NaN in X_scaled?", np.isnan(X_scaled).any())
print("any Inf in X_scaled?", np.isinf(X_scaled).any())

pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

print("X_pca shape:", X_pca.shape)
print("any NaN in X_pca?", np.isnan(X_pca).any())
print("any Inf in X_pca?", np.isinf(X_pca).any())
print("Explained variance ratio:", pca.explained_variance_ratio_)
print("Total variance preserved: {:.2%}".format(sum(pca.explained_variance_ratio_)))

# Show value ranges to ensure axes are sensible
print("PC1 range:", X_pca[:,0].min(), "to", X_pca[:,0].max())
print("PC2 range:", X_pca[:,1].min(), "to", X_pca[:,1].max())

# Plot robustly
plt.figure(figsize=(8,6))
for target, color, label in zip([0, 1], ['red', 'blue'], target_names):
    mask = (y == target)
    print(f"Points for {label}: {mask.sum()}")
    plt.scatter(
        X_pca[mask, 0],
        X_pca[mask, 1],
        s=40,                    # bigger markers
        alpha=0.9,
        edgecolors='k',          # black edge for visibility
        linewidths=0.5,
        label=f"{label} ({mask.sum()})"
    )

plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.title('PCA on Breast Cancer Dataset')
plt.legend()
plt.grid(True)
plt.tight_layout()

# Save to file so you can view even if no GUI
plt.savefig('pca_debug.png', dpi=150)
print("Saved plot to pca_debug.png")
plt.show()